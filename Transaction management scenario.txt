Transaction management:

FixedDepositServiceImpl: fixedDepositDao, bankAccountDao; 

@Transactional
fixedDepositService.createFixedDeposit(fixedDepositDetails)
===> bankAccountDao.subtractFromAccount(fixedDepositDetails.getAccountId(), fdd.getFdAmount());
	// account balance = account balance - fdAmout
	fixedDepositDao.createFixedDeposit(fixedDepositDetails)
	// create a fix deposit


OR

fixedDepositService.createFixedDeposit(fixedDepositDetails)
===>
	transactionTemplate.execute(
		new TransactionObject<>(){
			doInTransaction(transactionStatus){
				try{
					fixedDepositDao.createFixedDeposit(fixedDepositDetails);
					bankAccountDao.subtractFromAccount(fixedDepositDetails.getAccountId(), fdd.getFdAmount());
				}catch(Exception e){
					transactionStatus.rollback();
				}
			}
		}
	)




Main.app

bankAccountDetails(amount = 1000, timeStamp = current);
bankAccountService.createBankAccount(bankAccountDetails);


fixedDeposit(amount = 500, tenure = 12, time = current, id = incrementBy1)
fixedDepositService.createFixedDeposit(fixedDeposit);  // transactional manner: subtract from bank account, create fixedDeposit



